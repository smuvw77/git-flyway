name: Sync New SQL Files to S3
on:
  push:
    branches:
      - main  # Change to your default branch
    paths:
      - 'sql/**'  # Only trigger when SQL files change

jobs:
  sync-sql-to-s3:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full commit history for diff comparison

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: Identify Changed SQL Files
        id: changed-files
        run: |
          # Get list of modified/added SQL files
          changed_files=$(git diff --name-only --diff-filter=AM HEAD~1 HEAD -- sql/)

          # Format as JSON array for output
          if [ -n "$changed_files" ]; then
            json_files=$(jq -n --arg files "$changed_files" '$files | split("\n") | map(select(. != ""))')
            echo "files=$json_files" >> $GITHUB_OUTPUT
          else
            echo "files=[]" >> $GITHUB_OUTPUT
          fi

      - name: Copy Changed Files to S3
        if: ${{ steps.changed-files.outputs.files != '[]' }}
        run: |
          echo "${{ steps.changed-files.outputs.files }}" | jq -r '.[]' | while read file; do
            s3_path="s3://sri-02242025/${file#sql/}"
            aws s3 cp "$file" "$s3_path"
            echo "Copied $file â†’ $s3_path"
          done

